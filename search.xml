<?xml version="1.0" encoding="utf-8"?>
<search>
  
    
    <entry>
      <title><![CDATA[test]]></title>
      <url>%2F2017%2F03%2F28%2Ftest%2F</url>
      <content type="text"><![CDATA[this is a test file this is heading 1this is heading 2this is heading 2this is heading 1this is heading 2]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[程序设计入门-Python]]></title>
      <url>%2F2017%2F03%2F26%2F%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%85%A5%E9%97%A8-Python%2F</url>
      <content type="text"><![CDATA[本文是网易云课堂中程序设计入门-Python的课程笔记。 数据类型、运算符、变量赋值和简单I/O操作对象与类型五种基本对象类型 字符串，str 使用单引号、双引号、三引号括起来的一连串字符。 整数，int 支持十进制（21），八进制（025）和十六进制（0x15） 浮点数，float 1.48, 21.0， 21.， .21, 2.1E-2 布尔类型，bool True，False 对象类型 type（） $1+2 3 $’1’ + ‘2’ ‘12’ $1.1 + 1.1 2.2 $1.1+1.1+1.1 3.30000000000000003(浮点数3.3无法在电脑中精确表示，有一定精度损失) 算术运算 算术运算符 含义 举例 / 除法运算 10/2=5.0；10/3=3.333335 % 求余数 10%3=1 // 求商运算 10//3=3 ** 指数运算 2**3=8 **python2中“/“表示向下取整，因此5/9=0,需要写为5./9才对，python3则是表示正常除。 自动类型转换参与运算的两个对象类型不同时，按照以下规则自动转换 *bool→int→float→complex 如：1.0+3=4.0；True+3.0=4.0 求余运算应用今天是周六，10天之后是周几？ （6+10）%7=2 x是否为偶数 if (x % 2 == 0) math模块import math #引入math模块 dir(math) #列出math中的内容 help（math.sin) #帮助 math.pi math.e 关系运算符x % 2 == 0 #等于 x % 2 != 0 逻辑运算符 关系运算符 含义 举例 and 与 True and False == False or 或 True or False == True not 非 not True == False 港台女明星 性别 == 女 and （籍贯 == 香港 or 籍贯 == 台湾） 判断闰年 年份能被4整除不能被100整除，或者能被400整除，则是闰年 （y % 4 == 0 and y % 100 != 0) or (y % 400 == 0) 运算符优先级​ 变量与I/O变量，Variable增量赋值运算符 累加 123count = count + 1# 简写为：count += 1 | 增量赋值 | 等价表示 || ——- | :———- || x += 2 | x = x + 2 || x -= 2 | x = x - 2 || x = 2 | x = x 2 || x /= 2 | x = x / 2 || x %= 2 | x = x % 2 || x = 2 | x = x 2 | 输入与输出input函数 12345import mathradius = float(input(‘Radius：’))area = math.pi * radius ** 2print('Area:', area) print函数 输出到多行 1print（'hello\nworld!') 程序控制结构选择结构程序流程图if语句123456score = 70if score &gt; 60: print('yes')else: print('no') 123456score = 70gender = 'lady'if score &gt; 60: if gender == 'lady': print('yes') 12345score = 70gender = 'lady'if score &gt; 60 and gender = 'lady': print('yes') 123456789score = 70gender = 'lady'if score &gt; 80: print('A')elif score &gt; 70: print('B')else: print('C') 一元二次方程求解123456789101112131415161718192021import matha = float(input('a:'))b = float(input('b:'))c = float(input('c:'))if a == 0: if b != 0: print('solution is:', -c/b) elif c == 0: print('x is any num') else: print('no solution')else: if b**2-4*a*c &lt; 0: print('no solution') elif b**2-4*a*c == 0: print('solution is:', -b/2/a) else: delta = math.sqrt(b**2-4*a*c) print('solution is:', (-b-delta)/a/2,(-b+delta)/a/2) 篮球比赛领先多少才安全123456789101112131415161718score = int(input(&apos;forward score:&apos;))score -= 3has_ball = input(&apos;has ball(0/1);&apos;)time_remaining = float(input(&apos;time remmaining:&apos;))if has_ball == &apos;1&apos;: score += 0.5else: score -= 0.5if score &lt; 0: score = 0score **= 2if score &gt; time_remaining: print(&apos;safe&apos;)else: print(&apos;not safe&apos;) 循环结构while循环语句 多次求一元二次方程 分析策略： 循环体外设定循环可执行的初始条件 书写需重复执行的代码（循环体） 设定循环条件并在循环体内设定条件改变语句 打印字符串5次 1234count = 0while count &lt; 5: print('hello world') 计算1+2+…+10 12345678i = 1s = 0while i &lt;= 10: s += i i += 1print(s) 多次求解一元二次方程 1234567891011121314151617181920212223import mathch = ''while ch != 'q': a = float(input('a:')) b = float(input('b:')) c = float(input('c:')) if a == 0: if b != 0: print('solution is:', -c/b) elif c == 0: print('x is any num') else: print('no solution') else: if b**2-4*a*c &lt; 0: print('no solution') elif b**2-4*a*c == 0: print('solution is:', -b/2/a) else: delta = math.sqrt(b**2-4*a*c) print('solution is:', (-b-delta)/a/2,(-b+delta)/a/2) ch = input('enter q to exit:') for循环计算1+2+3+…10 123456s = 0for i in range(1, 11, 1): s += i print(s) 计算常数e 12345678import mathe = 1for i in range(1, 100): e += 1/math.factorial(i)print(e) 12345678# 另一种算法，避免每次从1开始计算阶乘，可有效提升速度e = 1factorial = 1for i in range(1, 100): factorial *= i e += 1/factorialprint(e) 求常数π 123456pi = 0for i in range(1, 100000): pi += (-1)**(i+1)/(2*i-1)pi *= 4print(pi) 1234567891011# 该算法同样速度更快pi = 0sign = 1divisor = 2for i in range(1, 100000): pi += 4 * sign /divisor sign *= -1 divisor += 2print(pi) 奇偶归一猜想 对于每一个正整数，如果它为奇数，则对其乘3加1，如果为偶数，则对其除以2，如此循环，最后都能够得到1 12345678for n in range(1,100): while n != 1: if n % 2 == 0: n /= 2 else: n = n * 3 + 1 # print(n) print(n, end=' ') # 输出不换行 九九乘法表 12345for i in range(1, 10): for j in range(1, 10): # print(i * j, end =' ') print(format(i * j, '3d'), end=' ') #每个数字占3格，以整数形式输出，'3d'此处等同'3' print() 鸡兔同笼（穷举法） 鸡兔同笼，35头，94足 12345for chickens in range(35+1): for rabbits in range(35+1): if 2 * chickens + 4 * rabbits == 94 and chickens + rabbits == 35: print('chickens numbers:', chickens) print('rabbits numbers:', rabbits) while vs. for 循环 while循环更通用 任何for循环都可以用while来实现 for循环适用于已知循环范围（range），即起始值和步长 其他情况均使用while循环，如：不确定循环何时终止 编程练习二分法求平方根： 基本思想 猜测一个平方根（x/2) 如果猜小了，则正确平方根在猜测数字和原数字之间 如果猜大了，则在0和猜测数字之间 算法描述 input:x output:√x low = 0, high = x guess = (low + high) / 2 如果$guess^2 == x$, 则输出guess，程序结束 $如果guess^2 &lt; x , 则输出low = guess；继续步骤2$ 如果$guess^2 &gt; x$，则输出 $high = guess$;继续步骤2 1234567891011121314x = float(input('enter a number:'))low = 0high = xguess = (low + high) / 2while abs(guess ** 2 - x) &gt; 1e-5: if guess ** 2 &lt; x: low = guess else: high = guess guess = (high + low) / 2print('root of x is:', guess) 对于上面的程序，当x&lt;0或x&lt;1时将不成立 12345678910111213141516171819202122232425262728x = float(input('enter a number:'))if x &lt; 0: print('no root')elif x &lt; 1: low = x high = 1 guess = (low + high) / 2 while abs(guess ** 2 - x) &gt;1e-6: if guess ** 2 &gt; x: high = guess else: low = guess guess = (high + low) / 2 print('root of x is:', guess)else: low = 0 high = x guess = (low + high) / 2 while abs(guess ** 2 - x) &gt; 1e-6: if guess ** 2 &lt; x: low = guess else: high = guess guess = (high + low) / 2 print('root of x is:', guess) 判断素数 根据基本定义判断12345678n = int(input('enter a int number:'))for i in range(2, n): if n % i == 0: print('not a prime') break else: print('is a prime') 上面的程序是素数时每次不被整除都会输出 12345678n = int(input('enter a int number:'))for i in range(2, n): if n % i == 0: print(n, 'not a prime') breakelse: print(n, 'is a prime') 前50个素数 1234567891011121314151617# 可以通过缩小范围加快速度print('2 is a prime')count = 1for n in range(3, 500, 2): if n % 2 == 0: continue # print(n, 'not a prime') else: for i in range(3, n - 1, 2): if n % i == 0: #print(n, 'not a prime') break else: print(n, 'is a prime') count += 1 if count == 50: break 1234567891011121314# 算法import mathcount = 0num = 2while count &lt; 50: for i in range(2, int(math.sqrt(num)) + 1): if num % i == 0: break else: print(num) count += 1 num += 1 回文数 求 n的逆序n‘； 如果n == n’，则为回文数 1234567#转化为字符串问题n = input('enter a number:')n_new = n[::-1]if n == n_new: print('yes')else: print('no') 123456789101112#一般解法num = int(input('enter a number:'))num_temp = numnum_prime = 0while num_temp != 0: num_prime = num_prime * 10 + num_temp % 10 #余数留给新的数字，并每次乘以10 num_temp //= 10 # 原来数字每次向右移动一位，123→12if num == num_prime: print('yes')else: print('no')]]></content>
    </entry>

    
    <entry>
      <title><![CDATA[Hello World]]></title>
      <url>%2F2017%2F03%2F08%2Fhello-world%2F</url>
      <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
    </entry>

    
  
  
</search>
